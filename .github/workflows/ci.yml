name: Publish

on:
  push:
    branches:
      - develop
      - main
      - feature/ci-publish-and-deploy-docker-images

jobs:

  #
  # Build and publish all npm packages
  #
  # Required (environment) variable(s) from CI:
  # - secrets.NPM_AUTH_TOKEN
  #
  build-and-publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup .npmrc file to publish to npm
      - name: Setup npm authentication
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install

      - name: Build and Publish all packages/modules to npm
        # TODO: re-enable script:
        run: |
          echo "./build-and-publish-all-packages.sh"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}

      # Build and publish Docker image for packages/aisbreaker-server/
      #- name: Build Docker image, login and push to hub.docker.com
      #  run: |
      #    cd packages/aisbreaker-server/

      #    export VERSION=`cat VERSION`
      #    if [[ -z "$VERSION" ]] ; then
      #      echo "Couldn't find valid VERSION file"
      #      exit 1
      #    fi

      #    docker build -t "aisbreaker/aisbreaker-server:${VERSION}" -t "aisbreaker/aisbreaker-server:latest" .
      #    docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      #    docker push --all-tags "aisbreaker/aisbreaker-server"



  #
  # build and publish Docker images
  #
  # Required (environment) variable(s) from CI:
  # - secrets.DOCKER_USERNAME
  # - secrets.DOCKER_PASSWORD
  #
  aisbreaker-server-docker-image-build-and-publish:
    # almost duplicated code - except env values
    runs-on: ubuntu-latest
    needs: build-and-publish-npm
    env:
      PACKAGE_DIR: packages/aisbreaker-server
      IMAGE_NAME: aisbreaker/aisbreaker-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          cd "${PACKAGE_DIR}/"

          export VERSION=`cat VERSION`
          if [[ -z "$VERSION" ]] ; then
            echo "Couldn't find valid VERSION file"
            exit 1
          fi

          cp ../../package-lock.json ./
          docker build -t "${IMAGE_NAME}:${VERSION}" -t "${IMAGE_NAME}:latest" .

      - name: Publish Docker image 
        run: |
          cd "${PACKAGE_DIR}/"

          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
          docker push --all-tags "${IMAGE_NAME}"

  aisbreaker-chat-webapp-docker-image-build-and-publish:
    # almost duplicated code - except env values
    runs-on: ubuntu-latest
    # TODO: enable this job:
    if: false 
    needs: build-and-publish-npm
    env:
      PACKAGE_DIR: packages/aisbreaker-chat-webapp
      IMAGE_NAME: aisbreaker/aisbreaker-chat-webapp
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          cd "${PACKAGE_DIR}/"

          export VERSION=`cat VERSION`
          if [[ -z "$VERSION" ]] ; then
            echo "Couldn't find valid VERSION file"
            exit 1
          fi

          cp ../../package-lock.json ./
          docker build -t "${IMAGE_NAME}:${VERSION}" -t "${IMAGE_NAME}:latest" .

      - name: Publish Docker image 
        run: |
          cd "${PACKAGE_DIR}/"

          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
          docker push --all-tags "${IMAGE_NAME}"


  #
  # deploy to Kubernetes Dev namespace
  #
  # Required (environment) variable(s) from CI:
  # - secrets.KUBE_CONFIG = `base64 ~/.kube/config -w0` 
  #
  # If more features are needed for k8s deployment, check:
  # - https://github.com/marketplace/actions/simple-deploy-to-kubernetes-cluster
  # - k8s deployment with several specific GitHub actions:
  #   - https://nicwortel.nl/blog/2022/continuous-deployment-to-kubernetes-with-github-actions
  #
  aisbreaker-server-k8s-dev-deploy:
    # almost duplicated code - except env values???
    runs-on: ubuntu-latest
    needs:
      - aisbreaker-server-docker-image-build-and-publish
      # TODO: enable this job:
      #- aisbreaker-chat-webapp-docker-image-build-and-publish
    env:
      PACKAGE_DIR: packages/aisbreaker-server
      IMAGE_NAME: aisbreaker/aisbreaker-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      #- name: TODO
      #  run: |
      #    mkdir ~/.kube/
      #    echo "${{secrets.KUBE_CONFIG}}" | base64 -d > ~/.kube/config
          
      # https://github.com/actions-hub/kubectl :
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}


      # TODO: set correct VERION in deployment.yml
      #   https://www.baeldung.com/linux/envsubst-command

      - uses: actions-hub/kubectl@master
        with:
          args: get namespaces
          
      - uses: actions-hub/kubectl@master
        with:
          args: get pods


  aisbreaker-chat-webapp-k8s-dev-deploy:
    # almost duplicated code - except env values???
    runs-on: ubuntu-latest
    # TODO: enable this job:
    if: false 
    needs:
      - aisbreaker-server-docker-image-build-and-publish
      - aisbreaker-chat-webapp-docker-image-build-and-publish
    env:
      PACKAGE_DIR: packages/aisbreaker-server
      IMAGE_NAME: aisbreaker/aisbreaker-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: TODO
        run: 'echo "TOOD: TO IMPLEMENT aisbreaker-chat-webapp-k8s-dev-deploy"'
  
  
  #
  # intergration test with Kubernetes Dev namespace
  #
  aisbreaker-integration-test-with-dev:
    runs-on: ubuntu-latest
    needs: 
      - aisbreaker-server-k8s-dev-deploy
      # TODO: enable this job:
      #- aisbreaker-chat-webapp-k8s-dev-deploy
    env:
      PACKAGE_DIR: packages/aisbreaker-server
      IMAGE_NAME: aisbreaker/aisbreaker-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: TODO
        run: 'echo "TOOD: TO IMPLEMENT aisbreaker-server-integration-test-with-dev"'

  #
  # deploy - wait for manual approval/review
  # 
  aisbreaker-k8s-prod-deploy-approval:
    runs-on: ubuntu-latest
    needs:
      - aisbreaker-integration-test-with-dev
    environment:
      # use environment with environment protection rules/required reviewers 
      # (see https://devblogs.microsoft.com/devops/i-need-manual-approvers-for-github-actions-and-i-got-them-now/ for explanation)
      name: demo-prod
    env:
      PACKAGE_DIR: packages/aisbreaker-server
      IMAGE_NAME: aisbreaker/aisbreaker-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Approved Info
        run: 'echo "Approved ... continue with PROD deployment job ..."'
 
  
  #
  # deploy to Kubernetes Prod namespace - after manual approval
  # 
  # Required (environment) variable(s) from CI:
  # - secrets.KUBE_CONFIG = `base64 ~/.kube/config -w0` 
  #
  # If more features are needed for k8s deployment, check:
  # - https://github.com/marketplace/actions/simple-deploy-to-kubernetes-cluster
  # - k8s deployment with several specific GitHub actions:
  #   - https://nicwortel.nl/blog/2022/continuous-deployment-to-kubernetes-with-github-actions
  aisbreaker-server-k8s-prod-deploy:
    # almost duplicated code - except env values
    runs-on: ubuntu-latest
    needs:
      - aisbreaker-k8s-prod-deploy-approval
    environment:
      name: demo-prod
    env:
      PACKAGE_DIR: packages/aisbreaker-server
      IMAGE_NAME: aisbreaker/aisbreaker-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: TODO
        run: 'echo "TOOD: TO IMPLEMENT aisbreaker-server-k8s-prod-deploy"'

  aisbreaker-chat-webapp-k8s-prod-deploy:
    # almost duplicated code - except env values
    runs-on: ubuntu-latest
    needs:
      - aisbreaker-k8s-prod-deploy-approval
    environment:
      name: demo-prod
    env:
      PACKAGE_DIR: packages/aisbreaker-server
      IMAGE_NAME: aisbreaker/aisbreaker-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: TODO
        run: 'echo "TOOD: TO IMPLEMENT aisbreaker-chat-webapp-k8s-prod-deploy"'

  
