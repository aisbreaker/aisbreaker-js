name: Publish

on:
  push:
    branches:
      - develop
      - main

jobs:
  build-and-publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup .npmrc file to publish to npm
      - name: Setup npm authentication
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install

      - name: Build and Publish all packages/modules to npm
        run: |
          echo "./build-and-publish-all-packages.sh"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}

      # Build and publish Docker image for packages/aisbreaker-server/
      #- name: Build Docker image, login and push to hub.docker.com
      #  run: |
      #    cd packages/aisbreaker-server/

      #    export VERSION=`cat VERSION`
      #    if [[ -z "$VERSION" ]] ; then
      #      echo "Couldn't find valid VERSION file"
      #      exit 1
      #    fi

      #    docker build -t "aisbreaker/aisbreaker-server:${VERSION}" -t "aisbreaker/aisbreaker-server:latest" .
      #    docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
      #    docker push --all-tags "aisbreaker/aisbreaker-server"

  build-and-publish-docker-image-aisbreaker-server:
    # almost duplicated code - except env values
    runs-on: ubuntu-latest
    needs: build-and-publish-npm
    env:
      PACKAGE_DIR: packages/aisbreaker-server
      IMAGE_NAME: aisbreaker/aisbreaker-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          cd "${PACKAGE_DIR}/"

          export VERSION=`cat VERSION`
          if [[ -z "$VERSION" ]] ; then
            echo "Couldn't find valid VERSION file"
            exit 1
          fi

          cp ../../package-lock.json ./
          docker build -t "${IMAGE_NAME}:${VERSION}" -t "${IMAGE_NAME}:latest" .

      - name: Publish Docker image 
        run: |
          cd "${PACKAGE_DIR}/"

          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
          docker push --all-tags "${IMAGE_NAME}"


  build-and-publish-docker-image-aisbreaker-chat-webapp:
    # almost duplicated code - except env values
    runs-on: ubuntu-latest
    needs: build-and-publish-npm
    env:
      PACKAGE_DIR: packages/aisbreaker-chat-webapp
      IMAGE_NAME: aisbreaker/aisbreaker-chat-webapp
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          cd "${PACKAGE_DIR}/"

          export VERSION=`cat VERSION`
          if [[ -z "$VERSION" ]] ; then
            echo "Couldn't find valid VERSION file"
            exit 1
          fi

          cp ../../package-lock.json ./
          docker build -t "${IMAGE_NAME}:${VERSION}" -t "${IMAGE_NAME}:latest" .

      - name: Publish Docker image 
        run: |
          cd "${PACKAGE_DIR}/"

          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
          docker push --all-tags "${IMAGE_NAME}"

